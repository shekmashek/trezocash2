/*
          # [Operation Name]
          Create Invite Collaborator RPC Function

          ## Query Description: [This operation creates a secure RPC function 'invite_collaborator' to handle the logic of adding a collaborator to a project. It checks if the invitee exists and prevents self-invites. This function runs with the privileges of the service_role, allowing it to query user data securely.]
          
          ## Metadata:
          - Schema-Category: "Structural"
          - Impact-Level: "Medium"
          - Requires-Backup: false
          - Reversible: true
          
          ## Structure Details:
          - Creates a new function `invite_collaborator(p_invitee_email, p_project_ids, p_role, p_permission_scope)`.
          
          ## Security Implications:
          - RLS Status: N/A (Function runs as security definer)
          - Policy Changes: No
          - Auth Requirements: The function must be called by an authenticated user.
          
          ## Performance Impact:
          - Indexes: None
          - Triggers: None
          - Estimated Impact: Low.
          */
CREATE OR REPLACE FUNCTION public.invite_collaborator(
    p_invitee_email text,
    p_project_ids uuid[],
    p_role text,
    p_permission_scope text
)
RETURNS json
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
DECLARE
    v_invitee_id uuid;
    v_inviter_id uuid := auth.uid();
    v_new_collaborator_record json;
BEGIN
    -- Find the user to invite by email
    SELECT id INTO v_invitee_id FROM auth.users WHERE email = p_invitee_email;

    -- If user does not exist, return an informative message
    IF v_invitee_id IS NULL THEN
        RETURN json_build_object('error', 'L''utilisateur ' || p_invitee_email || ' n''existe pas. Il doit d''abord créer un compte.');
    END IF;

    -- Prevent inviting self
    IF v_invitee_id = v_inviter_id THEN
        RETURN json_build_object('error', 'Vous ne pouvez pas vous inviter vous-même.');
    END IF;

    -- Check if already a collaborator for this project
    IF EXISTS (
        SELECT 1 FROM public.collaborators
        WHERE user_id = v_invitee_id AND project_ids @> p_project_ids
    ) THEN
        RETURN json_build_object('error', 'Cet utilisateur est déjà un collaborateur sur ce projet.');
    END IF;

    -- Create the collaboration record
    INSERT INTO public.collaborators (owner_id, user_id, email, role, permission_scope, project_ids, status)
    VALUES (v_inviter_id, v_invitee_id, p_invitee_email, p_role, p_permission_scope, p_project_ids, 'accepted')
    RETURNING json_build_object(
        'id', id,
        'owner_id', owner_id,
        'user_id', user_id,
        'email', email,
        'role', role,
        'status', status,
        'project_ids', project_ids,
        'permission_scope', permission_scope
    ) INTO v_new_collaborator_record;

    RETURN v_new_collaborator_record;
END;
$$;
