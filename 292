-- Drop existing tax related objects if they exist
DROP TABLE IF EXISTS public.tax_configs CASCADE;
DROP TYPE IF EXISTS public.tax_base_type;
DROP TYPE IF EXISTS public.tax_declaration_periodicity;

-- Create ENUM types for tax configuration
CREATE TYPE public.tax_base_type AS ENUM ('revenue', 'profit', 'salary');
CREATE TYPE public.tax_declaration_periodicity AS ENUM ('monthly', 'quarterly', 'annually');

-- Create tax_configs table
CREATE TABLE public.tax_configs (
    id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id uuid REFERENCES auth.users(id) ON DELETE CASCADE NOT NULL,
    project_id uuid REFERENCES public.projects(id) ON DELETE CASCADE,
    name text NOT NULL,
    rate numeric(5, 2) NOT NULL,
    base_type public.tax_base_type NOT NULL,
    declaration_periodicity public.tax_declaration_periodicity NOT NULL,
    payment_delay_months integer NOT NULL DEFAULT 1,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);

-- Enable RLS for tax_configs table
ALTER TABLE public.tax_configs ENABLE ROW LEVEL SECURITY;

-- RLS Policies for tax_configs
CREATE POLICY "Enable read access for authenticated users" ON public.tax_configs
FOR SELECT TO authenticated USING (auth.uid() = user_id);

CREATE POLICY "Enable insert for authenticated users" ON public.tax_configs
FOR INSERT TO authenticated WITH CHECK (auth.uid() = user_id);

CREATE POLICY "Enable update for users based on user_id" ON public.tax_configs
FOR UPDATE TO authenticated USING (auth.uid() = user_id) WITH CHECK (auth.uid() = user_id);

CREATE POLICY "Enable delete for users based on user_id" ON public.tax_configs
FOR DELETE TO authenticated USING (auth.uid() = user_id);
